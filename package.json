{
  "name": "css-if-polyfill",
  "version": "0.0.0",
  "type": "module",
  "description": "A JavaScript polyfill for CSS if() functionality with style(), media(), and supports() functions",
  "repository": {
    "type": "git",
    "url": "https://github.com/mfranzke/css-if-polyfill.git"
  },
  "homepage": "https://github.com/mfranzke/css-if-polyfill#readme",
  "bugs": {
    "url": "https://github.com/mfranzke/css-if-polyfill/issues"
  },
  "author": "Maximilian Franzke",
  "license": "MIT",
  "main": "dist/index.cjs",
  "types": "dist/index.d.ts",
  "module": "dist/index.modern.js",
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "require": "./dist/index.cjs",
      "import": "./dist/index.modern.js"
    }
  },
  "files": [
    "dist/",
    "README.md",
    "LICENSE"
  ],
  "keywords": [
    "css",
    "polyfill",
    "conditional",
    "if",
    "media-query",
    "supports",
    "style"
  ],
  "scripts": {
    "build": "microbundle",
    "dev": "microbundle watch",
    "lint": "xo",
    "lint:fix": "xo --fix",
    "prepare": "husky",
    "prepublishOnly": "npm run build",
    "serve": "http-server -p 3000 -o examples",
    "test": "jest --testEnvironment=jsdom",
    "test:watch": "jest --testEnvironment=jsdom --watch"
  },
  "devDependencies": {
    "@babel/core": "^7.28.0",
    "@babel/preset-env": "^7.28.0",
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@testing-library/jest-dom": "^6.6.3",
    "babel-jest": "^30.0.4",
    "http-server": "^14.1.1",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "lint-staged": "^16.1.2",
    "markdownlint-cli": "^0.45.0",
    "microbundle": "^0.15.1",
    "prettier": "3.6.2",
    "prettier-plugin-organize-imports": "^4.1.0",
    "prettier-plugin-pkg": "^0.21.1",
    "xo": "^1.1.1"
  },
  "source": "src/index.js",
  "umd:main": "dist/index.umd.js",
  "xo": {
    "space": 2,
    "rules": {
      "unicorn/prefer-module": "off",
      "unicorn/prefer-node-protocol": "off"
    }
  }
}
